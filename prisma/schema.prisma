generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Tarif_wilayah {
  id              Int     @id @default(autoincrement())
  jenis           String? @db.VarChar(50)
  wilayah         String  @db.VarChar(100)
  benda_ringan_rb Int?
  benda_berat_rb  Int?
  volume_rb       Int?
  cost_minimum    Int?
  estimasi        String? @db.VarChar(50)
}

model Tarif_volume_vendor {
  id              Int      @id @default(autoincrement())
  volume_min      Float
  volume_max      Float?
  biaya_perBarang Float
  biaya_diskon    Float?
  keterangan      String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique(map: "User_username_key")
  email     String    @unique(map: "User_email_key")
  password  String
  nomor_hp  String?   @unique(map: "User_nomor_hp_unique_key")
  createdAt DateTime  @default(now())
  role      user_role @default(USER)

  pengiriman Pengiriman[] @relation("UserToPengiriman")
}

enum user_role {
  OWNER
  ADMIN
  OPERATOR
  USER
}

model Pengiriman {
  id                  Int           @id @default(autoincrement())
  nomor_resi          String        @unique
  nama_pengirim       String
  jenis               String
  alamat_pengiriman   String
  wilayah             String
  volume_rb           Float
  total_volume        Float
  total_biaya_gmj     Float
  total_biaya_vendor  Float
  berat_satuan        Json?
  biaya               Float
  biaya_satuan        Json?
  metode_penghitungan String
  kategori_barang     String?
  jumlah_barang       Int
  barang              Json
  status_barang       StatusBarang? @default(sedang_dikirim)
  createdAt           DateTime      @default(now())
  nomor_hp_pengirim   String
  nomor_hp_penerima   String
  isi_barang          String
  catatan             String?
  nama_penerima       String?

  sttb                String       // <--- tambahkan ini (dari kamu)
  penerimaanBarang    PenerimaanBarang? // <--- pertahankan ini (dari branch lain)
  
  barangList Barang[]  // relasi ke model Barang
  user   User? @relation("UserToPengiriman", fields: [userId], references: [id])
  userId Int?
  inventory Inventory[]
}

model Barang {
  id              Int         @id @default(autoincrement())
  tgl             DateTime
  stt             String
  tujuan          String
  penerima_dan_hp String
  pengirim_dan_hp String
  jenis_kiriman   String?
  catatan         String?
  koli            Int
  panjang         Float
  lebar           Float
  tinggi          Float
  m3              Float
  vw              Float
  kg              Float?
  tagihan         Float
  alamat          String

  pengirimanId    Int
  pengiriman      Pengiriman  @relation(fields: [pengirimanId], references: [id])
}



enum StatusBarang {
  sedang_dikirim
  telah_diterima
  butuh_validasi
  telah_selesai
}

model Inventory {
  id           Int      @id @default(autoincrement())
  nomor_resi   String
  lokasi       String
  waktu_update DateTime @default(now())
  keterangan   String?
  foto        String?

  pengiriman Pengiriman @relation(fields: [nomor_resi], references: [nomor_resi], onDelete: Cascade)
}

model PenerimaanBarang {
  id                Int    @id @default(autoincrement())
  fotoBarang        String   
  fotoPembayaran    String
  fotoInvoice       String
  keterangan        String?
  createdAt         DateTime @default(now())

  pengiriman        Pengiriman @relation(fields: [pengirimanId], references: [id])
  pengirimanId      Int        @unique

  @@map("penerimaan_barang")
}
